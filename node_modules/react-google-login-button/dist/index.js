"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === "object" || typeof call === "function")) { return call; } return _assertThisInitialized(self); }

function _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var GoogleLogin =
/*#__PURE__*/
function (_Component) {
  _inherits(GoogleLogin, _Component);

  function GoogleLogin() {
    _classCallCheck(this, GoogleLogin);

    return _possibleConstructorReturn(this, (GoogleLogin.__proto__ || Object.getPrototypeOf(GoogleLogin)).apply(this, arguments));
  }

  _createClass(GoogleLogin, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.loadGoogleLibrary();
    }
  }, {
    key: "loadGoogleLibrary",
    value: function loadGoogleLibrary() {
      var _this = this;

      var script = document.createElement("script");
      script.src = "https://apis.google.com/js/platform.js";

      script.onload = function () {
        window.gapi.load('auth2', function () {
          var auth2 = window.gapi.auth2.init({
            client_id: _this.props.googleClientId
          }); // Render the button

          window.gapi.signin2.render('google-signin-button', {
            width: _this.props.width,
            height: _this.props.height,
            longtitle: _this.props.longTitle,
            theme: _this.props.theme,
            onfailure: _this.props.onLoginFailure,
            onsuccess: _this.props.onLoginSuccess
          }); // Sign in the user if they are currently signed in.

          if (auth2.isSignedIn.get() == true) {
            auth2.signIn();
          }
        });
      };

      document.body.appendChild(script);
    } // signOut() {
    //   var auth2 = window.gapi.auth2.getAuthInstance();
    //   auth2.signOut().then(() => {
    //     console.log('User signed out.');
    //   });
    // }

  }, {
    key: "render",
    value: function render() {
      return _react.default.createElement("div", {
        id: "google-signin-button"
      });
    }
  }]);

  return GoogleLogin;
}(_react.Component);

GoogleLogin.propTypes = {
  googleClientId: _propTypes.default.string.isRequired,
  onLoginSuccess: _propTypes.default.func.isRequired,
  onLoginFailure: _propTypes.default.func.isRequired,
  width: _propTypes.default.number,
  height: _propTypes.default.number,
  longTitle: _propTypes.default.bool,
  theme: _propTypes.default.oneOf(['light', 'dark'])
};
GoogleLogin.defaultProps = {
  width: 140,
  height: 40,
  longTitle: false,
  theme: 'light'
};
var _default = GoogleLogin;
exports.default = _default;